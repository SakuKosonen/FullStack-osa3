{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","Filter","props","value","filter","onChange","handleFilterChange","PersonForm","onSubmit","addNumero","newName","handleChange","newNumber","handleNumberChange","type","Persons","console","log","persons","jokin","name","indexOf","map","jotain","i","key","number","onClick","poisto","Notification","message","className","Notification2","App","useState","setPersons","setNewName","setNewNumber","setFilter","errorMessage","setErrorMessage","notErrorMessage","setNotErrorMessage","useEffect","personService","initialPersons","event","target","preventDefault","ihanko","jotai","slice","forEach","item","index","array","setTimeout","returnedPerson","concat","window","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98842724.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n/*const getOne = (id) => {\r\n    const request = axios.get(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}*/\r\n\r\nexport default {getAll, create, update, remove}","import React, { useState, useEffect } from 'react'\n//import axios from 'axios'\nimport personService from './services/persons'\n\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  //const [joni, setJoni] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [notErrorMessage, setNotErrorMessage] = useState(null)\n\n  const hook = () => {\n    console.log('effect')\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }\n\n  useEffect(hook, [])\n\n  const addNumero = (event) => {\n    event.preventDefault()\n    console.log('button clicked', event.target)\n    let ihanko = 0\n    const uusiLista = persons.slice()\n    let jotai = { name: newName, number: newNumber }\n    persons.forEach(function (item, index, array) {\n      //console.log(item, index)\n      if (item.name === newName) {\n        ihanko = 1\n      }\n    })\n    if (ihanko === 1) {\n      //window.alert(newName + ' is already added tho phonebook')\n      ihanko = 0\n\n      setErrorMessage(\n        newName + ' is already added to phonebook'\n\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n\n    } else {\n      //uusiLista.push(jotai)\n      //setPersons(uusiLista)\n\n      personService\n\n        .create(jotai)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n\n          /*.getAll()\n          .then(initialPersons => {\n            setPersons(initialPersons)*/\n\n          /*.create(jotai)\n          .then(response => {\n            setPersons(persons.concat(response.data))\n            setNewName('')\n            setNewNumber('')*/\n        })\n\n\n      ihanko = 0\n      setNotErrorMessage(\n        newName + ' added'\n\n      )\n      setTimeout(() => {\n        setNotErrorMessage(null)\n      }, 5000)\n\n    }\n\n\n\n\n  }\n\n  const poisto = (id, name) => {\n\n\n\n    /* persons.forEach(function (item, index, array) {\n       console.log(item)\n       console.log(id)\n \n       if(id === item.id){\n         console.log('Hei')\n \n         setJoni(item.name)\n       }\n \n     })*/\n\n\n\n    if (window.confirm('Delete ' + name + ' ?')) {\n\n\n      personService\n        .remove(id).then(() => {\n\n          personService\n            .getAll()\n            .then(initialPersons => {\n              setPersons(initialPersons)\n            })\n\n        })\n\n        setNotErrorMessage(\n          name + ' deleted'\n  \n        )\n        setTimeout(() => {\n          setNotErrorMessage(null)\n        }, 5000)\n\n\n    }\n  }\n\n  const handleChange = (event) => {\n\n    console.log(event.target.value)\n    setNewName(event.target.value)\n\n    // window.alert(newName + ' is already added tho phonebook')\n\n  }\n\n  const handleNumberChange = (event) => {\n\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n\n    // window.alert(newName + ' is already added tho phonebook')\n\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={errorMessage} />\n      <Notification2 message={notErrorMessage} />\n\n      <Filter handleFilterChange={handleFilterChange} filter={filter} />\n\n\n      <h2>add a new</h2>\n\n      <PersonForm addNumero={addNumero} newName={newName} handleChange={handleChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n\n      <h2>Numbers</h2>\n\n      <Persons poisto={poisto} persons={persons} filter={filter} />\n\n\n    </div>\n  )\n\n}\n\nconst Filter = (props) => {\n  return (\n    <form>\n      <div>\n        filter shown with <input\n          value={props.filter}\n          onChange={props.handleFilterChange}\n\n        />\n      </div>\n    </form>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n\n    <form onSubmit={props.addNumero}>\n      <div>\n        name: <input\n          value={props.newName}\n          onChange={props.handleChange}\n        />\n      </div>\n      <div>\n        number: <input\n          value={props.newNumber}\n          onChange={props.handleNumberChange}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst Persons = (props) => {\n\n\n\n  console.log(props.persons);\n  return (\n    <> {\n      props.persons\n        .filter((jokin) => jokin.name.indexOf(props.filter) !== -1)\n\n        .map((jotain, i) =>\n          <div key={i}>\n            <p> {jotain.name} {jotain.number}\n              <button onClick={() => props.poisto(jotain.id, jotain.name)}>delete</button>\n\n            </p>\n          </div>\n        )\n\n    }\n    </>\n  )\n}\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst Notification2 = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"notError\">\n      {message}\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}